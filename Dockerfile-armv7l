FROM larsla/go-armv7l

ENV NODE_VERSION=v5.7.0 NPM_VERSION=3
ENV CONFIG_FLAGS="--fully-static" DEL_PKGS="libgcc libstdc++" RM_DIRS=/usr/include

WORKDIR /

RUN set -ex && apk add --no-cache curl make gcc g++ binutils-gold python linux-headers paxctl libgcc libstdc++ gzip git && \
  curl -sSL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}.tar.gz | tar -xz && \
  ls / && mkdir -p /node-${NODE_VERSION} && cd /node-${NODE_VERSION} && \
  ./configure --prefix=/usr ${CONFIG_FLAGS} && \
  make -j$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \
  make install && \
  paxctl -cm /usr/bin/node && \
  cd / && \
  if [ -x /usr/bin/npm ]; then \
    npm install -g npm@${NPM_VERSION} && \
    find /usr/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf; \
  fi && \
  apk del curl make gcc g++ binutils-gold python linux-headers paxctl ${DEL_PKGS} && \
  rm -rf /etc/ssl /node-${NODE_VERSION} ${RM_DIRS} \
    /usr/share/man /tmp/* /var/cache/apk/* /root/.npm /root/.node-gyp \
    /usr/lib/node_modules/npm/man /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html

RUN \
    apk add --no-cache ca-certificates; \
    mkdir -p /etc/ssl/certs/; \
    update-ca-certificates; \
    export PATH=$PATH:$GOBIN; \
    go get github.com/tools/godep; \
    go get github.com/grafana/grafana; \
    cd $GOPATH/src/github.com/grafana/grafana; \
    go run build.go setup; \
    godep restore; \
    go build .; \
    npm install; \
    npm install -g grunt grunt-cli; \
    grunt

RUN ln -s $GOPATH/src/github.com/grafana/grafana /grafana

WORKDIR /grafana

ENTRYPOINT ["/grafana/grafana"]
